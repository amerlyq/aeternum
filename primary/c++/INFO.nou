%%%% C++11
  Regex
    http://en.cppreference.com/w/cpp/regex/ecmascript

  FAQ
    http://c-faq.com/
      http://c-faq.com/osdep/cbreak.html

  Bestiary
    ++ http://videocortex.io/2017/Bestiary/

  Guideline
    https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#f16-for-in-parameters-pass-cheaply-copied-types-by-value-and-others-by-reference-to-const

  Anonymous namespace vs static
    http://www.comeaucomputing.com/techtalk/#nostatic
    https://stackoverflow.com/questions/4181059/linkage-of-symbols-within-anonymous-namespace-within-a-regular-namespace
      https://stackoverflow.com/questions/4977252/why-an-unnamed-namespace-is-a-superior-alternative-to-static
      https://stackoverflow.com/questions/11016220/what-are-inline-namespaces-for
      https://stackoverflow.com/questions/5780918/hiding-a-c-class-in-a-header-without-using-the-unnamed-namespace
    CHECK: hiding symbols with "-fwhole-program or -flto"
      https://stackoverflow.com/questions/18932237/c-inline-keyword-and-compiler-optimization
      https://kristerw.blogspot.com/2017/05/interprocedural-optimization-in-gcc.html
        -fwhole-program makes all functions local to the translation unit, unless you explicitly tell the compiler they are externally visible.

  Passing vars -- shared_ptr vs const ref
    https://herbsutter.com/2013/06/05/gotw-91-solution-smart-pointer-parameters/


DEBUG
  Print lib path which will be used
    $ gcc -print-file-name=libc.a
    OR $ gcc -print-libgcc-file-name
       # to link manually when using -nostdlib
  Investigate intermediate files
    $ gcc -save-temps ...
  Check paths to includes and libs to link
    $ gcc -H -v -print-search-dirs -o main main.c
    ALT: $ gcc -### ...
  Trace linker libs
    $ gcc -Wl,--trace main.c -o main -L. -lmylib


%% Snippets
  http://www.geonius.com/software/index.html#libgpl


%%% GCC
  GCC6
    https://gcc.gnu.org/gcc-6/changes.html
    https://gcc.gnu.org/gcc-6/porting_to.html
  Performance optimizations
    ++ http://stackoverflow.com/questions/14492436/g-optimization-beyond-o3-ofast

%%% General
  +++ Structure padding and alignment (low-level)
    http://www.catb.org/esr/structure-packing/
  ++ Placement New, Memory Dumps, and Alignment
    http://jrruethe.github.io/blog/2015/08/23/placement-new/
  !! Efficient argument passing in C++11
    http://www.codesynthesis.com/~boris/blog/2012/06/19/efficient-argument-passing-cxx11-part1/
  ++ Алёна C++ :: Приведение типов в C++
    http://alenacpp.blogspot.com/2005/08/c.html
  !! Mixing PIC/PIE with non-PIC == BAD
    http://stackoverflow.com/questions/8331456/mixing-pic-and-non-pic-objects-in-a-shared-library
    REF http://stackoverflow.com/questions/18026333/what-does-compiling-with-pic-dwith-pic-with-pic-actually-do
  ++ Linkers
    REF
      http://www.lurklurk.org/linkers/linkers.html
      Tut: +++ https://www.embeddedrelated.com/showarticle/900.php
    Linking Order of Libraries
      http://stackoverflow.com/questions/45135/why-does-the-order-in-which-libraries-are-linked-sometimes-cause-errors-in-gcc

%%% Standart
  Static (singleton) destruction
  https://sourcemaking.com/design_patterns/to_kill_a_singleton
    REF http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2660.htm#Destruction
    REF http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3338.html
        http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf
      # exactly after C++11 (and free)
    https://www.youtube.com/watch?v=c1gO9aB9nbs&feature=youtu.be&t=18m40s
    http://en.cppreference.com/w/cpp/utility/program/exit

%%% Inheritance
  # для обычных полей ( не вирт и не конструкторы )
        / pub | pro | pri
  | pub | pub | pro | pri
  | pro | pro | pro | ina
  | pri | pri | pri | ina

%%% Embedding data into ELF verbatim
  + http://stackoverflow.com/questions/4864866/c-c-with-gcc-statically-add-resource-files-to-executable-library
  http://stackoverflow.com/questions/19169039/symbol-names-when-embedding-data-in-executable-on-linux
  + http://gareus.org/wiki/embedding_resources_in_executables
  http://stackoverflow.com/questions/4158900/embedding-resources-in-executable-using-gcc/4158997#4158997
  http://www.linuxjournal.com/content/embedding-file-executable-aka-hello-world-version-5967
