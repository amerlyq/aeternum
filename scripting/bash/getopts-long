#!/bin/bash
# vim:ts=2:sw=2:sts=2

die() { printf "Err: '"${0##*/}"' %s${1+\n}" "$1"; return 1; }
args() {
  local OPTIND=1
  # BET: use '-:' for options => see $ nvim /usr/bin/pacaur:1807
  while getopts 'avf:k-' o $*; do case $o
  in v) VERBOSE=1
  ;; k) KEEP=1
  ;; f) FILE=$OPTARG
  # ALT:(!OPTIND): $1 -- directly use
  # ALT:(!OPTIND): eval 'o=${'$((OPTIND>2? --OPTIND :OPTIND))'#--}'
  ;; -) v=${!OPTIND#--}; o=${v%%=*}; v=${v#$o}; v=${v#=}
    case $o
    in file) FILE=$v
    ;; verbose) VERBOSE=1
    ;; *) die "invalid long option '--$o'"
    esac; shift; OPTIND=1; continue
  ;; "?") die
  ;; :) die "needs value for '-$o'"
  ;; *) die "unprocessed valid option '-$o'"
  esac; done; shift $((OPTIND-1))
}

do_keep() { (($KEEP)) && return || echo 'Delete all'; }

check() {
  unset VERBOSE KEEP FILE
  printf "Test: %s\n" "$*"
  args $@ || return
  do_keep
  printf "$( (($VERBOSE))&&echo v) $( (($KEEP))&&echo k) => %s\n\n" "$FILE"
}

check -a
check -v -k
check -v
check -k
check -vk
check -f F
check -vf F
check -vkf F

check --file=F
check -k --file=A
check --file=A -v
check --keep --file=A
check --verbose --file=A
check --file=A --verbose -k
