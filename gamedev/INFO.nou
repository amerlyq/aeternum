DECI
  ::: use CommonLisp + SDL2 bindings
    https://github.com/lispgames/cl-sdl2
      ERR: https://www.reddit.com/r/Common_Lisp/comments/9bzltg/the_clsdl2_library_is_removing_finalizers_soon/
        => finalizers are BAD for resource management in CL
    VIZ: useful CL libs for multimedia
      https://github.com/lispgames/lispgames.github.io/wiki/Common-Lisp

    +++ TUT: Common Lisp SDL2 туториал
      https://habr.com/ru/post/275651/
        https://github.com/TatriX/cl-sdl2-tutorial

    https://news.ycombinator.com/item?id=16819425

    ~~ https://common-lisp.net/project/cl-test-grid/library/cl-sdl2.html
  TUT: Pushing Pixels with Lisp
    https://www.youtube.com/watch?v=82o5NeyZtvw&list=PL2VAYZE_4wRITJBv6saaKouj4sWSG1FcS
  TUT:
    http://landoflisp.com/
  ALT
    https://github.com/borodust/trivial-gamekit

  Compiling
    www.naughtydog.com/docs/Naughty-Dog-GDC08-Adventures-In-Data-Compilation.pdf


READ
  +++ Game development on Haskell
    http://keera.co.uk/blog/2014/10/15/from-60-fps-to-500/
    http://keera.co.uk/blog/2014/08/13/most-inspiring-green-screen-you-will-ever-see/
    haskell bindings
      https://wiki.haskell.org/SDL
  BOOK
    Game Engine Gems 3
      http://www.gameenginegems.net/geg3.php
    Game Engine Black Book DOOM
      http://fabiensanglard.net/gebbdoom/
  NICE: Rust Game Development Working Group ⌇⡞⣶⡟⠞
    https://rust-gamedev.github.io/
    rust-gamedev/arewegameyet: The repository for arewegameyet.rs ⌇⡞⣶⡯⣙
      https://github.com/rust-gamedev/arewegameyet/


TRY:
  mle -- editor without... anything
    https://github.com/adsr/mle
    - Movement via less
    - File browsing via tree
    - File grep via grep
    - String manip via perl


VIZ:CMP:
  https://www.khronos.org/opengl/wiki/Related_toolkits_and_APIs


ALT: GL
  Totally agnostic graphics library -- Direct3D / OpenGL / Metal / WebGL
    https://github.com/bkaradzic/bgfx
  Raylib
    https://www.raylib.com/
    https://github.com/raysan5/raylib


GL
  GL/Vulkan bindings
    https://github.com/cginternals/glbinding
    https://github.com/google/shaderc
  SDL2
    https://www.libsdl.org/languages.php
    IDEA: https://itch.io/games/made-with-sdl
    TUT: http://lazyfoo.net/tutorials/SDL/index.php
  GLFW
    https://www.glfw.org/
    https://github.com/glfw/glfw
    If graphics only (getting a GL context going) and basic input
      support is what you need, then GLFW3 is the best alternative imo.
    Super clean and easy to use.
    Nice documentation as well.
    For making demos and similar, nothing beats GLFW3.
    GLFW: Light weight, callback system, decent support, good GLES support.
  SDL game engine 2d
    https://sourceforge.net/projects/sge2d/
  ModernGL
    https://moderngl.readthedocs.io/en/stable/
  SFML
    https://www.sfml-dev.org/
      https://github.com/SFML/SFML
    is pretty great if you're using C++
    Very clean and well designed C++ api.
    If you're the kind of person who would use SDL or GLFW
      and wrap everything with RAII types before getting started -- just use SFML instead.
    -- does not allow you to allocate a core context
    CMP: vs SDL2
      [⡡⡄⣀⣊] Porting my engine from SFML to SDL · Elias Daler's blog ⌇⡡⡄⢒⣡
        https://eliasdaler.github.io/porting-to-sdl/
      [⡡⡄⣀⣋] Friday Facts #230 - Engine modernisation | Factorio ⌇⡡⡄⢸⠢
        https://www.factorio.com/blog/post/fff-230
        = Getting rid of Allegro


GUI
  List all GUI toolkits for SDL - SDL Development - Simple Directmedia Layer ⌇⡟⡋⣶⡞
    https://discourse.libsdl.org/t/list-all-gui-toolkits-for-sdl/21911
    SDL-widgets - a GUI toolkit using SDL ⌇⡟⡋⣶⡤
      http://members.chello.nl/w.boeke/SDL-widgets/
    Kiss_sdl - Simple universal GUI widget toolkit for SDL - SDL Development - Simple Directmedia Layer ⌇⡟⡋⣶⢁
      https://discourse.libsdl.org/t/kiss-sdl-simple-universal-gui-widget-toolkit-for-sdl/21675
    GitHub - dalerank/nanogui-sdl: Minimalistic port of NanoGUI claim works with SDL API w/o external dependencies. ⌇⡟⡋⣶⢮
      https://github.com/dalerank/nanogui-sdl
  GitHub - Immediate-Mode-UI/Nuklear: A single-header ANSI C immediate mode cross-platform GUI library ⌇⡟⡋⣶⡬
    https://github.com/Immediate-Mode-UI/Nuklear
    = Nuklear -- embedded GUI into _your_ program
    !!! similar to what I wish to make from "mio"
    OFF: https://habr.com/ru/post/319106/
    TUT: http://casualgum.com/public/nuklear_gui.html
  Для рисования на совсем слабых контроллеров могу свою либу посоветовать:
    https://github.com/errorcalc/ESLowGraphicsLibrary
  libui
    https://github.com/andlabs/libui
  imgui C++
    https://github.com/ocornut/imgui
  Fast Light Toolkit - Fast Light Toolkit (FLTK) ⌇⡟⡋⣷⠹
    https://www.fltk.org/
  Game-GUI
    https://github.com/sp4cerat/Game-GUI


VZ
  https://github.com/MicBosi/VisualizationLibrary
  http://visualizationlibrary.org/docs/2.0/html/index.html
  Magnum Engine [Best] - Lightweight and modular C++11/C++14 graphics middleware for games and data visualization
    https://magnum.graphics/
    |community/magnum| - C++11/C++14 graphics middleware for games and data visualization


Game
  Ogre 2.2
    https://www.ogre3d.org/#
  urho3d
    https://github.com/urho3d/Urho3D/pull/1709
    E.G: https://github.com/urho3d/Urho3D/tree/master/Source/Samples
  Allegro5
    https://sourceforge.net/projects/alleg/
  Panda3D
    https://www.panda3d.org/
  Pygame
    https://www.pygame.org/news
  Godot
    FUTURE: https://godotengine.org/article/retrospective-and-future
    TALK: https://www.reddit.com/r/programming/comments/ei7i5h/godot_engine_a_decade_in_retrospective_and_future/
    SRC: https://github.com/godotengine
    ALSO: https://github.com/bitwes/Gut
    Godot Engine - Here comes Godot 3.2, with quality as priority : gamedev
      https://www.reddit.com/r/gamedev/comments/evlyxs/godot_engine_here_comes_godot_32_with_quality_as/
    godotengine/awesome-godot: A curated list of free/libre plugins, scripts and add-ons for Godot ⌇⡡⡄⠇⢾
      https://github.com/godotengine/awesome-godot

  Custom
    Was a custom engine really necessary for making The Witness? : gamedev
      https://www.reddit.com/r/gamedev/comments/eutcxx/was_a_custom_engine_really_necessary_for_making/
      ++ 2020-02-01 [X] WHY: [2019 TGDF] Making Games in 2019 and Beyond (Jonathan Blow) - YouTube
        https://www.youtube.com/watch?v=aVb6-Rkz7W4
      The most important talk on programming by Jonathan Blow - YouTube
        https://www.youtube.com/watch?v=dS6rCaDSwW8


Voxel
  https://github.com/nothings/obbg


DEBUG
  bombomby/optick: C++ Profiler For Games
    https://github.com/bombomby/optick
      ++ nice interface
      -- still must insert macro in each slow function


Dataset interchange formats
  live-clones/hdf5: Live clone of https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git.
    https://github.com/live-clones/hdf5


Awesome
  ++ ellisonleao/magictools: A list of Game Development resources to make magic happen. ⌇⡞⢋⢨⢸
    https://github.com/ellisonleao/magictools
    VIZ:libs
      Allegro - A game programming library ⌇⡡⡄⠕⣾
        https://liballeg.org/
        Entity component system - Wikipedia ⌇⡡⡄⠙⣘
          https://en.wikipedia.org/wiki/Entity_component_system
      Cinder ⌇⡡⡄⠚⢿
        https://libcinder.org/
      ++ skypjack/entt: Gaming meets modern C++ - a fast and reliable entity component system (ECS) and much more ⌇⡡⡄⠛⠃
        https://github.com/skypjack/entt
      Heaps - Haxe Game Engine - Heaps.io Game Engine ⌇⡡⡄⠜⠅
        https://heaps.io/
      NodeBox | NodeBox ⌇⡡⡄⠜⡜
        https://www.nodebox.net/
      SFML ⌇⡡⡄⠜⢞
        https://www.sfml-dev.org/
      bkaradzic/bgfx: Cross-platform, graphics API agnostic, "Bring Your Own Engine/Framework" style rendering library. ⌇⡡⡄⠜⢵
        https://github.com/bkaradzic/bgfx
      Are we game yet? ⌇⡡⡄⠝⢢
        https://arewegameyet.rs/
      Game Development by Tom Looman | ZEEF ⌇⡡⡄⠝⣎
        https://game-development.zeef.com/tom.looman
  Awesome gamedev repositories : gamedev ⌇⡞⢋⢥⢣ <⡉⣇>
    https://www.reddit.com/r/gamedev/comments/5abuks/awesome_gamedev_repositories/
  Calinou/awesome-gamedev: A collection of free software and free culture resources for making amazing games. (mirror) ⌇⡞⢋⢥⢩
    https://github.com/Calinou/awesome-gamedev
  mbrukman/awesome-gamedev: A list of Game Development resources to make magic happen. ⌇⡞⢋⢨⣗
    https://github.com/mbrukman/awesome-gamedev
  pault84/awesome-gamedev: A list of Game Development resources to make magic happen. ⌇⡞⢋⢨⣛
    https://github.com/pault84/awesome-gamedev
  jamtasticgd/awesome-gamedev: A compilation of game dev related media (podcasts, Youtube, article, books, etc..) ⌇⡞⢋⢨⣝
    https://github.com/jamtasticgd/awesome-gamedev
  miloyip/game-programmer: A Study Path for Game Programmer ⌇⡞⢑⢽⠳
    https://github.com/miloyip/game-programmer

  READ: +++ oreolek/awesome-gamedev - wall-of-shame.md at 90b6a5f1ce445a150cd5101cb70b30182e3300ad - awesome-gamedev - Code hosting ⌇⡞⢋⢨⣤
    https://code.oreolek.ru/oreolek/awesome-gamedev/src/commit/90b6a5f1ce445a150cd5101cb70b30182e3300ad/wall-of-shame.md?lang=it-IT

  Awesome Gamedev - Nephasto ⌇⡡⡄⠇⠃
    https://www.nephasto.com/blog/awesomegamedev.html
  Caerind/AwesomeCppGameDev: A curated list of awesome C++ (mainly) things for Game Development. Inspired by awesome-... stuff. ⌇⡡⡄⠓⡛
    https://github.com/Caerind/AwesomeCppGameDev
  The Top 2,315 Gamedev Open Source Projects on Github ⌇⡡⡄⠞⡵
    https://awesomeopensource.com/projects/gamedev
  Gamedev - Everything I know ⌇⡡⡄⠞⢹
    https://wiki.nikitavoloboev.xyz/games/gamedev

  VIZ:Libs
    raizam/gamedev_libraries: A collection of open source c/c++ libraries for gamedev ⌇⡡⡄⠟⠸
      https://github.com/raizam/gamedev_libraries
    Game Development Libraries ⌇⡡⡄⠟⡗
      http://jwu.github.io/wiki/gamedev-libs/
    The Best 27 C++ (or C) gamedev Libraries | BestOfCpp ⌇⡡⡄⠟⡻
      https://bestofcpp.com/tag/gamedev
    Favourite programming libraries for game dev? : gamedev ⌇⡡⡄⠟⢅
      https://www.reddit.com/r/gamedev/comments/im78hf/favourite_programming_libraries_for_game_dev/
    12 best open source gamedev library projects. ⌇⡡⡄⠠⠹
      https://www.findbestopensource.com/tagged/gamedev-library
    mika314/sdlpp: C++ wrapper for SDL2 ⌇⡡⡄⠠⡼
      https://github.com/mika314/sdlpp


Tools
  Getting Started - OpenGL Wiki ⌇⡞⢋⢨⣹
    https://www.khronos.org/opengl/wiki/Getting_Started
