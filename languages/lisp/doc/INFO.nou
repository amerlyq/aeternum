WHY lisp
  +++ [_] READ:HOWTO: http://stevelosh.com/blog/2018/08/a-road-to-common-lisp/
  ++ https://www.linkedin.com/pulse/building-cloud-choosing-lisp-because-nobody-told-me-i-mason-browne
  Review
    https://habrahabr.ru/post/262225/
  These years in Common Lisp: 2018 - Vince Zd - Medium
    https://medium.com/@vindarel/these-years-in-common-lisp-2018-1d6b9084920d


Critique of Lisp
  NEED: "disillusionment" articles from someone who started big project in Lisp and then concluded Lisp is not fit for the job.
    Such experiences can provide invaluable insights in the actual limitations to overcome (or abandon Lisp too).
    Remember main aspiration from the above was "strive to write a story in the natural way... which can _accidentally_ become interactive
  BAD:(why): Dynamic Languages are Static Languages | Existential Type ⌇⡞⢜⡺⡀
    https://existentialtype.wordpress.com/2011/03/19/dynamic-languages-are-static-languages/
    Alice ⌇⡞⢜⢁⣉
      https://www.ps.uni-saarland.de/alice/
    Tom Murphy 7's Invincible Web Page ⌇⡞⢜⢁⣓
      http://tom7.org/
  Why We Hate Lisp
    [_] BAD: http://wiki.c2.com/?WhyWeHateLisp
    [_] NICE: http://wiki.c2.com/?WhyWeLoveLisp
  VIZ
    http://www.newlisp.org/index.cgi?page=Links
  How Common Lisp sucks
    https://groups.google.com/forum/#!msg/comp.lang.lisp/GMx6gjESVZw/Z8PGTPs1Y-gJ
  BUT
    http://paulgraham.com/vanlfsp.html
  Lisp and Haskell ⌇⡞⢜⡣⡽
    https://markkarpov.com/post/lisp-and-haskell.html
  Lisp -> Haskell ※⡞⣓⣮⣂
  Gamasutra - Postmortem: Naughty Dog's Jak and Daxter: the Precursor Legacy ⌇⡞⢜⡥⠨
    https://www.gamasutra.com/view/feature/131394/postmortem_naughty_dogs_jak_and_.php?page=2
  freenode/#lisp - IRC Chatlog ⌇⡞⢜⡭⢏
    https://irclog.tymoon.eu/freenode/%23lisp?around=1579010993#1579010993
    = 18:22 <phoe> this is only partially on topic, but I can give you a rant
    about how hardcore Lisp evangelists like Graham contribute to the bad vibe
    that Lisp-as-a-language has around the world.
  @pjb there's redit that has been rewritten from lisp,
    but the postmorterm wasn't that negative on lisp IMO.
  [_] ARCH: The Bipolar Lisp Programmer ⌇⡞⣓⣝⠜
    http://marktarver.com/next.html


SUCCESS
  +++ August 2016 Lisp Game Jam Postmortem / Steve Losh ⌇⡞⢜⡥⠱
    https://stevelosh.com/blog/2016/08/lisp-jam-postmortem/
  Postmortem Blog Post - Autumn Lisp Game Jam 2018 community - itch.io ⌇⡞⢜⡥⠿
    https://itch.io/jam/autumn-lisp-game-jam-2018/topic/327318/postmortem-blog-post
  Lisp Jam Postmortem ⌇⡞⢜⡥⡂
    https://rpav.mephle.net/2017/05/04/Lisp-Jam-Postmortem/
  April's 2017 Lisp Game Jam Postmortem · Pavel Korolev ⌇⡞⢜⡥⡋
    https://borodust.org/2017-04-lgj-postmortem
  Cloud Fighter Postmortem - August 2016 Lisp Game Jam community - itch.io ⌇⡞⢜⡥⡠
    https://itch.io/jam/august-2016-lisp-game-jam/topic/35425/cloud-fighter-postmortem
  Lisp Gamejam Postmortem ⌇⡞⢜⡥⡦
    https://ahungry.com/blog/2016-01-09-2016-01-09-Lisp-Gamejam-Postmortem.html


Language extensions
  CLiki: language extension ⌇⡞⣓⣝⡍
    https://www.cliki.net/Language%20extension


Lisp
  REF:(cheatsheet): http://jtra.cz/stuff/lisp/sclr/index.html
  SEE http://stackoverflow.com/questions/2720843/can-a-language-have-lisps-powerful-macros-without-the-parentheses
    http://www.dwheeler.com/readable/sweet-expressions.html
    https://news.ycombinator.com/item?id=823524
    https://www.reddit.com/r/lisp/comments/1pyg07/why_not_use_indentations_rather_than_numerous/
    https://pschombe.wordpress.com/2006/04/16/lisp-without-parentheses/
    https://www.quora.com/Would-it-be-possible-to-replace-parentheses-in-LISP-with-whitespace
    http://dustycloud.org/blog/wisp-lisp-alternative/
  Common Lisp CMP Racket
    https://news.ycombinator.com/item?id=15077519
  How to make Lisp go faster than C
    http://www.iaeng.org/IJCS/issues_v32/issue_4/IJCS_32_4_19.pdf
    https://news.ycombinator.com/item?id=1390944
  lisp symbols/types lookup
    http://www.lispworks.com/documentation/HyperSpec/Front/X_Symbol.htm
    http://www.sbcl.org/manual/
    https://en.wikibooks.org/wiki/Common_Lisp/Reference
    http://clhs.lisp.se/Body/26_glo_p.htm#proper_sequence
  VIZ:E.G. https://rosettacode.org/wiki/Category:Common_Lisp


ALT
  CMP:(evolution): https://www.iro.umontreal.ca/~monnier/hopl-4-emacs-lisp.pdf

  https://common-lisp.net/project/asdf/
  TRY: WM instead of XMonad
    https://common-lisp.net/project/clfswm/#screenshot
  http://www.lisperati.com/
  http://lisper.ru/
    http://lisper.ru/planet/
    http://lisper.ru/wiki/lisp-source-code
  http://habrahabr.ru/post/265589/
  http://rus-linux.net/MyLDP/algol/LISP/lisp01.html
  Multithreading
    http://stackoverflow.com/questions/9400410/common-lisp-parallel-programming
   Maybe think about Arc as Lisp with syntax sugar, short keywords, small rules
    threads.md ⌇⡞⢜⡶⠀
      https://gist.github.com/Bike/a89cbfda64ace273b12eed8675dda632
  TRY:USE: lisp/scheme/guile under xdotool/xbindkey
  IDEA: lisp image -> the same as meridia
    -> dump memory from compiled syntax
    http://stackoverflow.com/questions/480083/what-is-a-lisp-image
  READ INFO Infrastructure review
    https://habrahabr.ru/post/265589/
      https://github.com/roswell/roswell
      https://mmaul.github.io/clml.tutorials//2015/08/08/CLML-Time-Series-Part-1.html
      https://github.com/melisgl/mgl


TUT Getting Started
  REF https://stackoverflow.com/questions/21935903/how-to-prepare-for-learning-lisp-off-line
  https://bbs.archlinux.org/viewtopic.php?id=31731
  VIZ http://lisp-lang.org/learn/getting-started/
  ++ QuickStart: https://cs.gmu.edu/~sean/lisp/LispTutorial.html
  http://www.jonathanfischer.net/modern-common-lisp-on-linux/
  http://www.gigamonkeys.com/book/
  [_] https://cliki.net/Getting%20Started
  [_] https://www.reddit.com/r/lisp/comments/6snw5d/questions_for_2017_common_lisp_experts/
  [_] https://news.ycombinator.com/item?id=13979002
  [_] http://www.n-a-n-o.com/lisp/cmucl-tutorials/LISP-tutorial-16.html
  [_] https://joshtronic.com/2015/04/26/open-challenge-learn-lisp-with-me/
  Setup Common Lisp IDE (emacs) / Хабр
    https://habr.com/ru/post/259737/
    https://nullprogram.com/blog/2010/01/15/
  Как начать писать код на Lisp?
    https://habr.com/ru/post/413061/
  irc:#lisp
    https://irclog.tymoon.eu/freenode/lisp


Lisp learning recommendations
  How to write Common Lisp in 2017 – an initiation manual
    http://articulate-lisp.com/
    https://news.ycombinator.com/item?id=13979002
  [_] FIND Lisp primitives (minimal set) * to start learning
    https://ccrma.stanford.edu/courses/124/resources/Basic%20Lisp%20Primitives.htm
    https://quizlet.com/105861300/lisp-2-basic-primitives-flash-cards/
  https://www.reddit.com/r/lisp/comments/1xmd8n/two_hard_months_into_cl_my_feedback_for_the/
  https://www.reddit.com/r/lisp/comments/2hd0x1/the_legacy_of_lisp_observationsrants/


REF
  Common Lisp Style Guide | Common Lisp ⌇⡞⢜⢎⢱
    https://lisp-lang.org/style-guide/#use-libraries
  [_] READ: how I write modules ⌇⡞⢜⢎⣋
    https://gist.github.com/substack/5075355
